syntax = "proto3";

package qwen3;

message TensorBlob {
  bytes data = 1;
}

message LayerRequest {
  TensorBlob hidden_states = 1;
  TensorBlob attention_mask = 2;
  TensorBlob cache_position = 3;
  TensorBlob cos_embedding = 4;
  TensorBlob sin_embedding = 5;
  string session_id = 6;
  int32 stage = 7;
}

message LayerResponse {
  TensorBlob hidden_states = 1;
}

message NodeInfo {
  string ip = 1;
  int32 port = 2;
  int32 stage = 3;
}

message ChainRequest {
  TensorBlob hidden_states = 1;
  TensorBlob attention_mask = 2;
  TensorBlob cache_position = 3;
  TensorBlob cos_embedding = 4;
  TensorBlob sin_embedding = 5;
  string session_id = 6;
  repeated NodeInfo chain = 7;
  int32 start_stage = 8;
  bool save_cache = 9;
}

message ChainResponse {
  TensorBlob hidden_states = 1;
  repeated TensorBlob intermediate_states = 2;
}

message GetOptimalChainRequest {
  int32 num_stages = 1;
  string client_id = 2;
}

message GetOptimalChainResponse {
  repeated NodeInfo chain = 1;
  bool success = 2;
  string error_message = 3;
}

service Qwen3Layer {
  rpc ProcessLayer(LayerRequest) returns (LayerResponse);
  rpc ProcessChain(ChainRequest) returns (ChainResponse);
  rpc GetOptimalChain(GetOptimalChainRequest) returns (GetOptimalChainResponse);
}
